
package com.cai.bos.crm;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ICustomerService", targetNamespace = "http://service.cai.com/")
@XmlSeeAlso({
  
})
public interface ICustomerService {


    /**
     * 
     * @return
     *     returns java.util.List<com.cai.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FindAllResponse")
    public List<Customer> findAll();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.cai.service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCustomerByTelephone", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FindCustomerByTelephone")
    @ResponseWrapper(localName = "findCustomerByTelephoneResponse", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FindCustomerByTelephoneResponse")
    public Customer findCustomerByTelephone(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<com.cai.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findListAssociation", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FindListAssociation")
    @ResponseWrapper(localName = "findListAssociationResponse", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FindListAssociationResponse")
    public List<Customer> findListAssociation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "finddecidedzoneIdByAddress", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FinddecidedzoneIdByAddress")
    @ResponseWrapper(localName = "finddecidedzoneIdByAddressResponse", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FinddecidedzoneIdByAddressResponse")
    public String finddecidedzoneIdByAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "assignCustomerToDecidedzone", targetNamespace = "http://service.cai.com/", className = "com.cai.service.AssignCustomerToDecidedzone")
    @ResponseWrapper(localName = "assignCustomerToDecidedzoneResponse", targetNamespace = "http://service.cai.com/", className = "com.cai.service.AssignCustomerToDecidedzoneResponse")
    public void assignCustomerToDecidedzone(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Integer> arg1);

    /**
     * 
     * @return
     *     returns java.util.List<com.cai.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findListNotAssociation", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FindListNotAssociation")
    @ResponseWrapper(localName = "findListNotAssociationResponse", targetNamespace = "http://service.cai.com/", className = "com.cai.service.FindListNotAssociationResponse")
    public List<Customer> findListNotAssociation();

}
